include:
  - project: 'clci/gitlab-ci'
    ref: release/v2-dev
    file:
      - definitions.gitlab-ci.yml
  - project: 'clci/gitlab-ci'
    ref: release/v2-dev
    file:
      - test-pipeline.gitlab-ci.yml
      - release-pipeline.gitlab-ci.yml
    rules:
      - if: '$PIPELINE_TYPE != "clpm-dep-update"'
  - project: 'clci/gitlab-ci'
    ref: release/v2-dev
    file:
      - clpm-dep-update-pipeline.gitlab-ci.yml
    rules:
      - if: '$PIPELINE_TYPE == "clpm-dep-update"'

variables:
  # Neither of these have package local nickname support.
  CLCI_TEST_CLISP: "no"
  CLCI_TEST_CMUCL: "no"
  CLCI_ABCL_TAG: "jdk8"

# This section is not strictly required, but prevents Gitlab CI from launching
# multiple redundent pipelines when a Merge Request is opened.
workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: '$CI_COMMIT_BRANCH'
    - if: '$CI_COMMIT_TAG'

generate docs:
  image: clfoundation/sbcl
  extends:
    - .clci sbcl
    - .clci clpm script
  variables:
    CLPM_SCRIPT: scripts/generate-docs.lisp
  artifacts:
    paths:
      - docs/

publish docs:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+(\.[0-9]+)*(-.*)?$/'
  needs:
    - "test blocker:release:clci"
  trigger: cl-tar/cl-tar-site
  variables:
    CL_TAR_TAG: $CI_COMMIT_TAG
    CL_TAR_PIPELINE: $CI_PIPELINE_ID

build static release:
  image: daewok/static-sbcl:2.1.9-alpine3.13
  extends:
    - .clci sbcl
    - .clci clpm script
  variables:
    CLCI_ASDF_VERSION: "3.3.4"
    CLPM_SCRIPT: scripts/build-static-release.lisp
  before_script:
    - apk add curl ca-certificates git pkgconfig gcc musl-dev linux-headers zlib-dev zlib-static make
  artifacts:
    paths:
      - releases/

# This is needed because golang's parameter substitution is crippled (no #) and
# gitlab's package registries can't accept a version string that starts with a
# v.
compute friendly version:
  image: alpine:3.13
  script:
    - echo "PACKAGE_VERSION=${CI_COMMIT_TAG#v}" > release.env
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+(\.[0-9]+)*(-.*)?$/'
  artifacts:
    reports:
      dotenv: release.env

publish static release:
  image: curlimages/curl
  script:
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file releases/static/cl-tar-${PACKAGE_VERSION}-linux-amd64.tar.gz "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/$CI_PROJECT_NAME/${PACKAGE_VERSION}/cl-tar-${PACKAGE_VERSION}-linux-amd64.tar.gz"'
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+(\.[0-9]+)*(-.*)?$/'
  needs:
    - "test blocker:release:clci"
    - "compute friendly version"
    - "build static release"

gitlab:release:clci:
  release:
    assets:
      links:
        - name: 'linux-amd64 binary'
          url: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/$CI_PROJECT_NAME/${PACKAGE_VERSION}/cl-tar-${PACKAGE_VERSION}-linux-amd64.tar.gz"
          filepath: '/binaries/cl-tar-linux-amd64'
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+(\.[0-9]+)*(-.*)?$/'
  needs:
    - "test blocker:release:clci"
    - "extract changelog:release:clci"
    - "compute friendly version"
